// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ePerfumes.Data;

#nullable disable

namespace ePerfumes.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ePerfumes.Models.Marca", b =>
                {
                    b.Property<int>("Marca_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Marca_ID"));

                    b.Property<string>("Marca_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca_Pic_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Marca_ID");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ePerfumes.Models.Perfume", b =>
                {
                    b.Property<int>("Perfume_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Perfume_ID"));

                    b.Property<int>("Marca_ID")
                        .HasColumnType("int");

                    b.Property<int>("PerfumeType")
                        .HasColumnType("int");

                    b.Property<int>("PerfumeVersion")
                        .HasColumnType("int");

                    b.Property<string>("Perfume_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfume_Pic_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("Perfume_ID");

                    b.HasIndex("Marca_ID");

                    b.ToTable("Perfumes");
                });

            modelBuilder.Entity("ePerfumes.Models.Perfume", b =>
                {
                    b.HasOne("ePerfumes.Models.Marca", "Marca")
                        .WithMany("Perfumes")
                        .HasForeignKey("Marca_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ePerfumes.Models.Marca", b =>
                {
                    b.Navigation("Perfumes");
                });
#pragma warning restore 612, 618
        }
    }
}
